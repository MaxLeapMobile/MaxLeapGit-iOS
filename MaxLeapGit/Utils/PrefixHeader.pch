//
//  PrefixHeader.pch
//  MaxLeapGit
//
//  Created by XiaJun on 15/4/14.
//  Copyright (c) 2015å¹´ XiaJun. All rights reserved.
//

#import <Availability.h>
#ifndef __IPHONE_8_0
#warning "This project uses features only available in iOS SDK 8.0 and later."
#endif

#ifdef __OBJC__
#import <UIKit/UIKit.h>
#import <Foundation/Foundation.h>

#import "DDLog.h"
#import "Flurry.h"
#import "MagicalRecord.h"
#import "SVProgressHUD.h"
#import <HockeySDK/HockeySDK.h>
#import <MaxLeap/MaxLeap.h>
#import <SDWebImage/UIImageView+WebCache.h>
#import <SVProgressHUD/SVProgressHUD.h>
#import <SVPullToRefresh/SVPullToRefresh.h>
#import <TTTAttributedLabel/TTTAttributedLabel.h>
#import <WebKit/WebKit.h>

#import "AppDelegate.h"
#import "JSONValidation.h"
#import "MLGMAccount+CoreDataProperties.h"
#import "MLGMAccount.h"
#import "MLGMActorProfile.h"
#import "MLGMAuthViewController.h"
#import "MLGMCustomTabBarController.h"
#import "MLGMError.h"
#import "MLGMEvent.h"
#import "MLGMFollowCell.h"
#import "MLGMFollowRelation.h"
#import "MLGMFollowViewController.h"
#import "MLGMGene.h"
#import "MLGMGeneCell.h"
#import "MLGMGenesViewController.h"
#import "MLGMHomePageCell.h"
#import "MLGMHomePageHeaderCell.h"
#import "MLGMHomePageViewController.h"
#import "MLGMLoginViewController.h"
#import "MLGMNewGeneViewController.h"
#import "MLGMOrganizationCell.h"
#import "MLGMOrganizationsViewController.h"
#import "MLGMRecommendEmptyView.h"
#import "MLGMRecommendViewController.h"
#import "MLGMRepo.h"
#import "MLGMRepoCell.h"
#import "MLGMRepoDetailController.h"
#import "MLGMReposViewController.h"
#import "MLGMSearchPageTitleView.h"
#import "MLGMSearchViewController.h"
#import "MLGMSortViewController.h"
#import "MLGMTagRelation.h"
#import "MLGMStringUtil.h"
#import "MLGMTimeLineCell.h"
#import "MLGMTimeLineViewController.h"
#import "MLGMWebService.h"
#import "MLGMWebViewController.h"
#import "UIBarButtonItem+Extension.h"
#import "WYPopoverController.h"

#import "NSBundle+Extension.h"
#import "NSDate+Extension.h"
#import "UIView+CustomBorder.h"
#import "NSBundle+Extension.h"
#import "NSDictionary+Extension.h"
#import "NSString+Extension.h"
#import "UIImage+Extension.h"
#import "UIView+AutoLayout.h"
#import "UIViewController+Extension.h"
#include "UIBarButtonItem+Extension.h"
#import "MLGMWebService+Convenience.h"

#endif

#ifdef DEBUG
static const int ddLogLevel = DDLogLevelInfo;
#else
static const int ddLogLevel = DDLogLevelError;
#endif

#define DEFINE_SHARED_INSTANCE_USING_BLOCK(block) \
static dispatch_once_t pred = 0; \
__strong static id _sharedObject = nil; \
dispatch_once(&pred, ^{ \
_sharedObject = block(); \
}); \
return _sharedObject; \

#define SuppressPerformSelectorLeakWarning(Stuff) \
do { \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Warc-performSelector-leaks\"") \
Stuff; \
_Pragma("clang diagnostic pop") \
} while (0)

#define BLOCK_SAFE_RUN(block, ...) block ? block(__VA_ARGS__) : nil

#define BLOCK_SAFE_ASY_RUN_MainQueue(block, ...) block ? dispatch_async(dispatch_get_main_queue(), ^{\
BLOCK_SAFE_RUN(block,__VA_ARGS__); \
}): nil

#define BLOCK_SAFE_ASY_RUN_GlobalQueue(block, ...) block ? dispatch_async(dispatch_get_global_queue( DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^(void){\
BLOCK_SAFE_RUN(block,__VA_ARGS__); \
}): nil

#define SAFE_STRING(string) string ?: @""

#define NULL_TO_NIL(obj) ({ __typeof__ (obj) __obj = (obj); __obj == [NSNull null] ? nil : obj; })

#define execute_after_main_queue(delayInSeconds,  block) \
dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (delayInSeconds) * NSEC_PER_SEC), dispatch_get_main_queue(), ^{ \
    BLOCK_SAFE_ASY_RUN_MainQueue(block); \
})

#define JSON_OBJECT_WITH_STRING(string) (string?[NSJSONSerialization JSONObjectWithData: [string dataUsingEncoding:NSUTF8StringEncoding] options:kNilOptions error:nil]:nil)
#define JSON_STRING_WITH_OBJ(dic) (obj?[[NSString alloc]initWithData:[NSJSONSerialization dataWithJSONObject:dic options:kNilOptions error:nil] encoding:NSUTF8StringEncoding]:nil)ios io

#define ImageNamed(x)               [UIImage imageNamed:x]
#define OriginalImageNamed(x)       [[UIImage imageNamed:x] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal]

#define UIColorFromRGB(rgbValue) [UIColor colorWithRed:((float)((rgbValue & 0xFF0000) >> 16))/255.0 green:((float)((rgbValue & 0xFF00) >> 8))/255.0 blue:((float)(rgbValue & 0xFF))/255.0 alpha:1.0]

#define UIColorFromRGBWithAlpha( rgbValue, a ) [UIColor colorWithRed:((float)((rgbValue & 0xFF0000) >> 16))/255.0 green:((float)((rgbValue & 0xFF00) >> 8))/255.0 blue:((float)(rgbValue & 0xFF))/255.0 alpha:a]

#define SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(v)  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedAscending)

#define kAppVersion [[NSBundle mainBundle] objectForInfoDictionaryKey:@"CFBundleShortVersionString"]

#define IS_IPAD (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)
#define IS_IPHONE (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)
#define IS_IPHONE_4 ([[UIScreen mainScreen] bounds].size.height == 480.0f || [[UIScreen mainScreen] bounds].size.width == 480.0f)
#define IS_IPHONE_5 ([[UIScreen mainScreen] bounds].size.height == 568.0f || [[UIScreen mainScreen] bounds].size.width == 568.0f)
#define IS_IPHONE_6 ([[UIScreen mainScreen] bounds].size.height == 667.0f || [[UIScreen mainScreen] bounds].size.width == 667.0f)
#define IS_IPHONE_6_Plus ([[UIScreen mainScreen] bounds].size.height == 736.0f || [[UIScreen mainScreen] bounds].size.width == 736.0f)

#define HelveticalRegular           @"HelveticaNeue"
#define HelveticalBold              @"HelveticaNeue-Bold"
#define HelveticalLight             @"HelveticaNeue-Light"
#define HelveticalMedium            @"HelveticaNeue-Medium"

#define ScreenRect [[UIScreen mainScreen] bounds]

#define CONFIGURE(configureKey) configureKey
#define kGitHub_Client_ID CONFIGURE(@"GitHub_Client_ID")
#define KGitHub_Client_Secret CONFIGURE(@"GitHub_Client_Secret")
#define kGitHub_Redirect_URL CONFIGURE(@"GitHub_Redirect_URL")
#define kMaxLeap_Application_ID CONFIGURE(@"MaxLeap_Application_ID")
#define kMaxLeap_Client_Key CONFIGURE(@"MaxLeap_Client_Key")
#define kMaxLeap_REST_API_Key CONFIGURE(@"MaxLeap_REST_API_Key")
#define kHockeyApp_Identifier CONFIGURE(@"HockeyApp_Identifier")
#define kMaxLeapUserPassword CONFIGURE(@"MaxLeapUserPassword")
#define kFlurryAPIKey CONFIGURE(@"FlurryAPIKey")


#define ThemeNavigationBarColor     UIColorFromRGB(0x333333)
#define BottomToolBarColor          UIColorFromRGB(0x0076FF)
